//------------------------------------------------------------------------------
// CommandReset.h
//
// Group: Group 13604, study assistant Philip Loibl
//
// Authors: Thomas Eckstein 1530679
// Sp√∂cklberger Johannes 1531135
// Tatjana Baier 1530003
//------------------------------------------------------------------------------
//

#ifndef COMMANDRESET_H
#define COMMANDRESET_H

#include "Command.h"

#include <string>
#include <vector>

using std::string;
using std::vector;

//----------------------------------------------------------------------------
// Resets the game to its original state.
//
class CommandReset: public Command
{
private:

  //--------------------------------------------------------------------------
  // Private copy constructor - Should not be used.
  // @param original Instance to be copied.
  //
  CommandReset(const CommandReset& original);

  //--------------------------------------------------------------------------
  // Private assignment operator - Should not be used.
  // @param original Instance to be assigned from.
  //
  CommandReset& operator=(const CommandReset& original);

public:

  //--------------------------------------------------------------------------
  // Default constructor - creates a new instance.
  //
  CommandReset();

  //--------------------------------------------------------------------------
  // Deletes this instance.
  //
  virtual ~CommandReset();

  //--------------------------------------------------------------------------
  // Executes the command. Abstract method.
  // @param game The game where action should be performed on.
  // @param params Possible parameters needed for the execution.
  // @return Whether the command should terminate the program.
  //
  virtual bool execute(Game& game, vector<string>& params);
};

#endif
