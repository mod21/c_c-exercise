//------------------------------------------------------------------------------
// FieldWall.h
//
// Group: Group 13604, study assistant Philip Loibl
//
// Authors: Thomas Eckstein 1530679
// Sp√∂cklberger Johannes 1531135
// Tatjana Baier 1530003
//------------------------------------------------------------------------------
//

#ifndef FIELDWALL_H
#define FIELDWALL_H

#include "Field.h"

//------------------------------------------------------------------------------
// The player can't walk here.
//
class FieldWall: public Field
{
private:

  //----------------------------------------------------------------------------
  // Private copy constructor - Should not be used.
  //
  FieldWall(FieldWall &);

public:
  //----------------------------------------------------------------------------
  // Creates a new instance.
  //
  FieldWall();

  //----------------------------------------------------------------------------
  // Called when the player tries to enter a field.
  // @param player The current player.
  // @param position The position where the player is entering.
  // @param direction The direction the player is entering from.
  // @return Whether the player can enter here.
  //
  virtual bool onEnter(Player* player, CoordPair position, Direction* direction);

  //----------------------------------------------------------------------------
  // Called when the player tries to leave a field.
  // @param player The current player.
  // @param position The position the player is leaving to.
  // @param direction The direction the player is leaving to.
  // @return Whether the player can leave here.
  //
  virtual bool onLeave(Player* player, CoordPair position, Direction* direction);

  //----------------------------------------------------------------------------
  // Deletes this instance.
  //
  ~FieldWall();
};

#endif
