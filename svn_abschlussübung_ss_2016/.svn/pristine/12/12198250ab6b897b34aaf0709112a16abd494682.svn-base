//------------------------------------------------------------------------------
// Exceptions.h
//
// Group: Group 13604, study assistant Philip Loibl
//
// Authors: Thomas Eckstein 1530679
// Sp√∂cklberger Johannes 1531135
// Tatjana Baier 1530003
//------------------------------------------------------------------------------
//

#ifndef EXCEPTIONS_H
#define EXCEPTIONS_H

#include <exception>
#include <iostream>
#include <typeinfo>
#include "Messages.h"
#include "ExceptionInvalidMove.h"
#include "ExceptionInvalidBasicFile.h"
#include "ExceptionUnknownCommand.h"
#include "ExceptionWrongParameter.h"
#include "ExceptionWrongParameterCount.h"
#include "ExceptionNoMazeLoaded.h"
#include "ExceptionFileLoad.h"
#include "ExceptionFileWrite.h"
#include "ExceptionOutOfSteps.h"
#include "ExceptionInvalidPath.h"
#include "ExceptionWrongUsage.h"


using std::string;


inline const int processErrorMessage(std::exception const & ex)
{
  if (typeid(ex) == typeid(std::bad_alloc))
  {
    std::cout << DomainMessages::OUT_OF_MEMORY;
    return 1;
  }
  else if (typeid(ex) == typeid(std::ios_base::failure))
  {
    std::cout << DomainMessages::IOS_FAILURE;
    return 0;
  }
  std::cout << ex.what();
  return typeid(ex) == typeid(WrongUsageException) ? 2 : 0;
};

#endif
